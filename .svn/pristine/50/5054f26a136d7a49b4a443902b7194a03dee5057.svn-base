import {Component} from '@angular/core';
import {NavController, NavParams, Platform, App} from 'ionic-angular';
import {CallNumber} from '@ionic-native/call-number';
import {TaskManager} from '../../providers/task-manager';
import {Utils} from '../../utils/utils';
import {UserManager} from '../../providers/user-manager';
import {LoginPage} from '../login/login';

@Component({
    selector: 'page-alerts',
    templateUrl: 'alerts.html'
})
export class AlertsPage {

    alerts: any = '';
    user: any = '';
    alertsLoaded = false;
    displayAlert: number = -1;
    isIos: boolean = false;
    pushAlert: any;
    didLoad: boolean = false;

    constructor(public navCtrl: NavController,
                public plt: Platform,
                public navParams: NavParams,
                private userMgr: UserManager,
                private appCtrl: App,
                private taskMgr: TaskManager,
                private utils: Utils,
                private callNumber: CallNumber) {

        this.pushAlert = navParams.get('message');

        if (this.plt.is('ios')) {
            this.isIos = true;
        }
    }

    ionViewDidLoad() {
        // this.loadAlerts();
        // console.log('ionViewDidLoad AlertsPage 1');
    }


    ionViewWillEnter() {
        this.loadAlerts();
        // console.log('ionViewWillLoad AlertsPage 4');
        // if(this.didLoad){
        //     this.loadAlerts();
        // }
    }

    // ionViewWillLoad() {
    //     console.log('ionViewWillLoad AlertsPage 3');
    //
    //     // setTimeout(() => this.loadAgain(), 3000)
    // }

    // /** load history into this view  */
    loadAlerts() {
        this.utils.presentLoading();
        this.alertsLoaded = false;
        this.taskMgr.getEmployeeAlerts().then((response: any) => {
            this.alerts = response;
            this.user = response.userdata;
            this.alertsLoaded = true;
            console.log('this.pushAlert', JSON.stringify(this.pushAlert));
            console.log('this.alerts', JSON.stringify(this.alerts));
            this.utils.dismissLoading();
        }).catch((error) => {
            this.utils.dismissLoading();
            setTimeout(() => {
                this.utils.toastError(error);
            }, 500)
        })
    }

    loadAgain() {
        this.didLoad = true;
    }

    callPhone(number) {
        this.callNumber.callNumber(number, false)
            .then(() => console.log('Launched dialer!'))
            .catch(() => console.log('Error launching dialer'));
    }

    // callPhone(mobNumber: string) {
    //     window.open("tel:" + '1' + mobNumber);
    // }

    readMessage(i) {
        let holdObj = {
            alertId: this.alerts.data[i].id
        };
        if (this.alerts.data[i].viewed !== 1) {
            this.taskMgr.markEmployeeAlertRead(holdObj).then((response: any) => {
                this.alerts.data[i].time_stamp_viewed = response.data.time_stamp_viewed;
                this.taskMgr.badgeNumber -= 1;
            }).catch((error) => {
                this.utils.dismissLoading();
                setTimeout(() => {
                    this.utils.toastError(error);
                }, 500)
            })
        }
        if (this.displayAlert != i) {
            this.displayAlert = i;
        } else {
            this.displayAlert = -1;
        }
        this.alerts.data[i].viewed = 1;
    }

    logout() {
        this.userMgr.logout().then(response => {
            this.appCtrl.getRootNav().push(LoginPage);
        })
    }

}
