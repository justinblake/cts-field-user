
<ion-header>

    <ion-navbar>
        <ion-title>Feedback</ion-title>
    </ion-navbar>

</ion-header>


<ion-content no-padding>
    <ion-card>
        <ion-card-content>
            <ion-list>

                <ion-item>
                    <ion-label stacked>Type</ion-label>
                    <ion-select [(ngModel)]="data.statusId" placeholder="Select Feedback Type">
                        <ion-option *ngFor="let option of type.options" (ngModel)="mySelection" [value]="option.id">{{option.status}}
                        </ion-option>
                    </ion-select>
                </ion-item>

                <ion-item>
                    <ion-label class="temp-hold" text-wrap *ngIf="data.statusId === 5 || data.statusId === 7">This action will pause your current task. It can be resumed from the home tab</ion-label>
                    <ion-label class="temp-hold" text-wrap *ngIf="data.statusId === 6">This action will stop the current task and requires it to be re-dispatched</ion-label>
                    <ion-label class="temp-hold" text-wrap *ngIf="data.statusId === 12">This action will pause your current task and load the next task. Your current task can be resumed in the history tab</ion-label>
                    <ion-label stacked>Notes: (4 Character minimum)</ion-label>
                    <ion-textarea [(ngModel)]="data.notes" (blur)="trimNotes()"></ion-textarea>
                </ion-item>

                <ion-item>
                    <ion-label stacked>Images</ion-label>
                </ion-item>
                <ion-list *ngFor="let file of data.files; let i = index">
                    <ion-item>
                        {{file.name}}
                        <button ion-button icon-only item-right clear (click)="deleteImage(i)">
                            <ion-icon color="danger" name="trash"></ion-icon>
                        </button>
                    </ion-item>
                    <ion-item>
                        <ion-label stacked>Caption</ion-label>
                        <ion-input [(ngModel)]="data.files[i].caption"></ion-input>
                    </ion-item>
                    <!--<ion-item>
                      <ion-label stacked>Notes</ion-label>
                    <ion-textarea [(ngModel)]="data.files[i].notes"></ion-textarea>
                    </ion-item>-->
                </ion-list>
                <!--<ion-item><input type="file" (change)="showFiles($event)"></ion-item>-->
                <ion-item>
                    <button ion-button icon-left color="secondary" (click)="presentActionSheet()">
                        <ion-icon name="add-circle"></ion-icon>
                        Add Image
                    </button>
                </ion-item>
                <ion-item>&nbsp;</ion-item>


            </ion-list>

        </ion-card-content>


        <ion-row style="background-color:white">
            <ion-col>
                <button ion-button icon-left block color="secondary" (click)="save()" [disabled]="disableFormSubmit()">
                    <ion-icon name="checkbox-outline"></ion-icon>
                    Save
                </button>
            </ion-col>
            <!--<ion-col width-50>
              <button ion-button icon-left block color="dark" (click)="cancel()">
                <ion-icon name="close"></ion-icon>
                Cancel
              </button>
            </ion-col>-->
        </ion-row>


    </ion-card>
</ion-content>
